basePath: /
definitions:
  model.Driver:
    properties:
      created_at:
        type: string
      id:
        type: string
      license_plate:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        $ref: '#/definitions/model.DriverStatus'
      updated_at:
        type: string
    type: object
  model.DriverStatus:
    enum:
    - active
    - inactive
    - working
    type: string
    x-enum-varnames:
    - DriverStatusActive
    - DriverStatusInactive
    - DriverStatusWorking
  model.Order:
    properties:
      created_at:
        type: string
      driver_id:
        type: string
      id:
        type: string
      note:
        type: string
      order_date:
        type: string
      order_detail_ids:
        items:
          type: string
        type: array
      order_status:
        $ref: '#/definitions/model.OrderStatus'
      shipping_status:
        $ref: '#/definitions/model.ShippingStatus'
      updated_at:
        type: string
      updated_shipping:
        type: string
      user_id:
        type: integer
    type: object
  model.OrderStatus:
    enum:
    - draft
    - pending
    - paid
    - rejected
    type: string
    x-enum-varnames:
    - OrderStatusDraft
    - OrderStatusPending
    - OrderStatusPaid
    - OrderStatusRejected
  model.PayloadCreateDriver:
    description: PayloadCreateDriver details.
    properties:
      license_plate:
        example: B 4134 LUZ
        type: string
      name:
        example: driver grab
        type: string
      phone:
        example: "081394859283"
        type: string
    required:
    - license_plate
    - name
    - phone
    type: object
  model.PayloadCreateOrder:
    description: PayloadCreateOrder details.
    properties:
      note:
        example: mohon hati hati karena terdapat barang pecah belah
        type: string
    type: object
  model.PayloadCreateOrderDetail:
    properties:
      destination_address_id:
        type: string
      origin_address_id:
        type: string
      recycle_hub_id:
        type: string
      waste_weight:
        type: number
    required:
    - destination_address_id
    - origin_address_id
    - recycle_hub_id
    - waste_weight
    type: object
  model.PayloadUpdateDriver:
    description: PayloadUpdateDriver details.
    properties:
      license_plate:
        example: B 4134 LUZ
        type: string
      name:
        example: driver grab
        type: string
      phone:
        example: "081394859283"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/model.DriverStatus'
        example: inactive
    type: object
  model.PayloadUpdateOrder:
    description: PayloadUpdateOrder details.
    properties:
      note:
        example: "40.7128"
        type: string
      orderDetailIDs:
        items:
          type: string
        type: array
    type: object
  model.PayloadUpdateOrderDetail:
    properties:
      destination_address_id:
        type: string
      origin_address_id:
        type: string
      waste_weight:
        type: number
    required:
    - destination_address_id
    - origin_address_id
    - waste_weight
    type: object
  model.ResponseDriver:
    properties:
      created_at:
        type: string
      id:
        type: string
      license_plate:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        $ref: '#/definitions/model.DriverStatus'
      updated_at:
        type: string
    type: object
  model.ResponseOrder:
    description: ResponseOrder details.
    properties:
      created_at:
        type: string
      driver_id:
        type: string
      id:
        type: string
      note:
        type: string
      order_date:
        type: string
      order_detail_ids:
        items:
          type: string
        type: array
      order_status:
        $ref: '#/definitions/model.OrderStatus'
      shipping_status:
        $ref: '#/definitions/model.ShippingStatus'
      updated_at:
        type: string
      updated_shipping:
        type: string
    type: object
  model.ResponseOrderDetail:
    properties:
      created_at:
        type: string
      delivery_price:
        type: number
      destination_address_id:
        type: string
      id:
        type: string
      origin_address_id:
        type: string
      recycle_hub_id:
        type: string
      sub_total:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
      waste_weight:
        type: number
    type: object
  model.ShippingStatus:
    enum:
    - unassigned
    - pickup
    - delivery
    - finish
    type: string
    x-enum-varnames:
    - ShippingStatusUnassigned
    - ShippingStatusPickup
    - ShippingStatusDelivery
    - ShippingStatusFinish
  model.WebResponse:
    description: represents the standard API response format.
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the documentation of Operation Service API
  title: Operation Service API
  version: "1.0"
paths:
  /api/drivers:
    get:
      description: Find All Active Driver
      produces:
      - application/json
      responses:
        "200":
          description: List Active Driver
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Driver'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Find All Active Driver
      tags:
      - Drivers
    post:
      description: Create new Driver
      parameters:
      - description: create driver payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PayloadCreateDriver'
      produces:
      - application/json
      responses:
        "200":
          description: Driver created
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseDriver'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create a Driver
      tags:
      - Drivers
  /api/drivers/{id}:
    delete:
      description: Delete a Driver
      parameters:
      - description: order detail id
        example: '"67e1327bc481a422f0293ff9"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Driver created
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseDriver'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Delete a Driver
      tags:
      - Drivers
    put:
      description: Update Driver by ID
      parameters:
      - description: driver id
        example: '"67e1327bc481a422f0293ff9"'
        in: path
        name: id
        required: true
        type: string
      - description: update driver payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PayloadUpdateDriver'
      produces:
      - application/json
      responses:
        "200":
          description: Driver updated
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseDriver'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Update a Driver
      tags:
      - Drivers
  /api/drivers/all:
    get:
      description: Find All Driver
      produces:
      - application/json
      responses:
        "200":
          description: List Driver
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Driver'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Find All Driver
      tags:
      - Drivers
  /api/orders:
    get:
      description: Find All Orders
      produces:
      - application/json
      responses:
        "200":
          description: Order list
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Order'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      summary: FindAll Orders
      tags:
      - Orders
    post:
      description: Add and register new Order
      parameters:
      - description: create order payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PayloadCreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: Order created
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrder'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create an Order
      tags:
      - Orders
  /api/orders/{id}:
    delete:
      description: Delete Order By ID
      parameters:
      - description: order id
        example: '"67cdcb62a50a990a870d928f"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order deleted
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: DeleteById an Order
      tags:
      - Orders
    get:
      description: Find Order By ID
      parameters:
      - description: address id
        example: '"67cdcb62a50a990a870d928f"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Address found
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrder'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      summary: FindById an Order
      tags:
      - Orders
    put:
      description: Update Order By ID
      parameters:
      - description: order id
        example: '"67cdcb62a50a990a870d928f"'
        in: path
        name: id
        required: true
        type: string
      - description: update order payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PayloadUpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: Order updated
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrder'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Update an Order
      tags:
      - Orders
  /api/orders/checkout:
    post:
      description: Checkout Order and Change Status
      produces:
      - application/json
      responses:
        "200":
          description: Order created
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrder'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Checkout Order
      tags:
      - Orders
  /api/orders/save:
    post:
      description: Save Order Detail ID
      produces:
      - application/json
      responses:
        "200":
          description: Order created
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrder'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Save Order Detail ID
      tags:
      - Orders
  /order-details:
    post:
      description: Add and register new order detail
      parameters:
      - description: create order detail payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PayloadCreateOrderDetail'
      produces:
      - application/json
      responses:
        "200":
          description: Order detail created
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrderDetail'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create an Order Detail
      tags:
      - OrderDetail
  /order-details/{id}:
    delete:
      description: Delete order detail by ID
      parameters:
      - description: order detail id
        example: '"67cdcb62a50a990a870d928f"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order detail deleted
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Delete an Order Detail
      tags:
      - OrderDetail
    get:
      description: Find order detail by ID
      parameters:
      - description: order detail id
        example: '"67cdcb62a50a990a870d928f"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order detail found
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrderDetail'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Find an Order Detail by ID
      tags:
      - OrderDetail
    put:
      description: Update order detail by ID
      parameters:
      - description: order detail id
        example: '"67cdcb62a50a990a870d928f"'
        in: path
        name: id
        required: true
        type: string
      - description: update order detail payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PayloadUpdateOrderDetail'
      produces:
      - application/json
      responses:
        "200":
          description: Order detail updated
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ResponseOrderDetail'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                code:
                  type: integer
                data: {}
                status:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Update an Order Detail
      tags:
      - OrderDetail
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
